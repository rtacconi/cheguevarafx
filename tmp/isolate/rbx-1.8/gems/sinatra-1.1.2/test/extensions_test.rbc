!RBIX
17831730954501249321
x
M
1
n
n
x
10
__script__
i
56
5
45
0
1
65
49
2
0
49
3
1
7
4
64
81
5
47
49
6
1
15
99
7
7
45
8
9
43
10
43
11
65
49
12
3
13
99
12
7
13
12
7
14
12
65
12
49
15
4
15
49
13
0
15
2
11
I
6
I
0
I
0
I
0
n
p
16
x
4
File
n
x
11
active_path
x
7
dirname
s
7
/helper
x
1
+
x
7
require
x
14
ExtensionsTest
x
4
Test
n
x
4
Unit
x
8
TestCase
x
10
open_class
x
14
__class_init__
M
1
n
n
x
14
ExtensionsTest
i
250
5
66
99
7
0
65
49
1
2
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
99
7
5
65
49
1
2
13
99
12
7
2
12
7
6
12
65
12
49
4
4
15
49
2
0
15
99
7
7
65
49
1
2
13
99
12
7
2
12
7
8
12
65
12
49
4
4
15
49
2
0
15
99
7
9
65
49
1
2
13
99
12
7
2
12
7
10
12
65
12
49
4
4
15
49
2
0
15
99
7
11
65
49
1
2
13
99
12
7
2
12
7
12
12
65
12
49
4
4
15
49
2
0
15
5
7
13
64
56
14
47
50
15
1
15
5
7
16
64
56
17
47
50
15
1
15
5
7
18
64
56
19
47
50
15
1
15
5
7
20
64
56
21
47
50
15
1
15
5
7
22
64
56
23
47
50
15
1
15
5
7
24
64
56
25
47
50
15
1
15
99
7
26
65
49
1
2
13
99
12
7
2
12
7
27
12
65
12
49
4
4
15
49
2
0
15
99
7
28
45
29
30
43
31
65
49
32
3
15
1
15
5
7
33
64
56
34
47
50
15
1
11
I
6
I
0
I
0
I
0
n
p
35
x
13
FooExtensions
x
11
open_module
x
15
__module_init__
M
1
n
n
x
13
FooExtensions
i
34
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
15
5
48
4
15
99
7
5
7
6
65
67
49
2
0
49
3
4
11
I
5
I
0
I
0
I
0
n
p
7
x
3
foo
M
1
n
n
x
3
foo
i
2
1
11
I
1
I
0
I
0
I
0
n
p
0
p
5
I
-1
I
5
I
0
I
6
I
2
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
17
method_visibility
x
15
add_defn_method
x
7
private
x
20
im_hiding_in_ur_foos
M
1
n
n
x
20
im_hiding_in_ur_foos
i
2
1
11
I
1
I
0
I
0
I
0
n
p
0
p
5
I
-1
I
9
I
0
I
a
I
2
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
p
7
I
2
I
5
I
10
I
8
I
14
I
9
I
22
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
13
attach_method
x
13
BarExtensions
M
1
n
n
x
13
BarExtensions
i
16
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
5
I
0
I
0
I
0
n
p
4
x
3
bar
M
1
n
n
x
3
bar
i
2
1
11
I
1
I
0
I
0
I
0
n
p
0
p
5
I
-1
I
e
I
0
I
f
I
2
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
2
I
e
I
10
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
13
BazExtensions
M
1
n
n
x
13
BazExtensions
i
16
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
5
I
0
I
0
I
0
n
p
4
x
3
baz
M
1
n
n
x
3
baz
i
2
1
11
I
1
I
0
I
0
I
0
n
p
0
p
5
I
-1
I
13
I
0
I
14
I
2
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
2
I
13
I
10
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
14
QuuxExtensions
M
1
n
n
x
14
QuuxExtensions
i
16
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
5
I
0
I
0
I
0
n
p
4
x
4
quux
M
1
n
n
x
4
quux
i
2
1
11
I
1
I
0
I
0
I
0
n
p
0
p
5
I
-1
I
18
I
0
I
19
I
2
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
2
I
18
I
10
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
14
PainExtensions
M
1
n
n
x
14
PainExtensions
i
44
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
67
49
2
0
49
3
4
15
99
7
6
7
7
65
67
49
2
0
49
3
4
11
I
5
I
0
I
0
I
0
n
p
8
x
4
foo=
M
1
n
n
x
4
foo=
i
2
1
11
I
2
I
1
I
1
I
1
n
p
0
p
3
I
-1
I
1d
I
2
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
1
x
4
name
x
17
method_visibility
x
15
add_defn_method
x
4
bar?
M
1
n
n
x
4
bar?
i
2
1
11
I
2
I
1
I
1
I
1
n
p
0
p
3
I
-1
I
1e
I
2
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
1
x
4
name
x
5
fizz!
M
1
n
n
x
5
fizz!
i
2
1
11
I
2
I
1
I
1
I
1
n
p
0
p
3
I
-1
I
1f
I
2
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
1
x
4
name
p
7
I
2
I
1d
I
10
I
1e
I
1e
I
1f
I
2c
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
s
91
will add the methods to the DSL for the class in which you register them and its subclasses
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
94
45
0
1
43
2
45
3
4
49
5
1
15
5
45
0
6
43
2
7
7
49
8
1
47
49
9
1
15
45
0
10
43
11
45
12
13
49
5
1
15
5
45
0
14
43
11
7
15
49
8
1
47
49
9
1
15
5
45
0
16
43
11
7
7
49
8
1
47
49
9
1
15
5
45
0
17
43
2
7
15
49
8
1
10
88
2
8
89
3
47
49
9
1
11
I
4
I
0
I
0
I
0
I
-2
p
18
x
7
Sinatra
n
x
4
Base
x
13
FooExtensions
n
x
8
register
n
x
3
foo
x
11
respond_to?
x
6
assert
n
x
11
Application
x
13
BarExtensions
n
n
x
3
bar
n
n
p
13
I
0
I
23
I
c
I
24
I
1c
I
26
I
28
I
27
I
38
I
28
I
48
I
29
I
5e
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
2
it
s
35
allows extending by passing a block
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
27
45
0
1
43
2
56
3
50
4
0
15
5
45
0
5
43
2
7
6
49
7
1
47
49
8
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
7
Sinatra
n
x
4
Base
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
14
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
6
I
0
I
0
I
0
I
-2
p
4
x
25
im_in_ur_anonymous_module
M
1
n
n
x
25
im_in_ur_anonymous_module
i
2
1
11
I
1
I
0
I
0
I
0
n
p
0
p
3
I
-1
I
2e
I
2
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
0
I
2e
I
e
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
8
register
n
x
25
im_in_ur_anonymous_module
x
11
respond_to?
x
6
assert
p
5
I
0
I
2d
I
b
I
30
I
1b
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
s
100
will make sure any public methods added via Application#register are delegated to Sinatra::Delegator
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
66
45
0
1
43
2
45
3
4
49
5
1
15
5
45
0
6
43
7
49
8
0
56
9
50
10
0
7
11
49
12
1
47
49
13
1
15
5
45
0
14
43
7
49
8
0
56
15
50
10
0
7
16
49
12
1
10
60
2
8
61
3
47
49
13
1
11
I
4
I
0
I
0
I
0
I
-2
p
17
x
7
Sinatra
n
x
11
Application
x
13
FooExtensions
n
x
8
register
n
x
9
Delegator
x
24
private_instance_methods
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
6
to_sym
p
5
I
0
I
35
I
1
I
36
I
a
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
1
x
1
m
x
3
map
x
3
foo
x
8
include?
x
6
assert
n
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
6
to_sym
p
5
I
0
I
37
I
1
I
38
I
a
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
1
x
1
m
x
20
im_hiding_in_ur_foos
p
23
I
0
I
34
I
c
I
36
I
d
I
35
I
1a
I
36
I
1c
I
35
I
1f
I
36
I
24
I
38
I
25
I
37
I
32
I
38
I
34
I
37
I
3d
I
38
I
42
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
s
32
will handle special method names
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
84
45
0
1
43
2
45
3
4
49
5
1
15
5
45
0
6
43
7
49
8
0
56
9
50
10
0
7
11
49
12
1
47
49
13
1
15
5
45
0
14
43
7
49
8
0
56
15
50
10
0
7
16
49
12
1
47
49
13
1
15
5
45
0
17
43
7
49
8
0
56
18
50
10
0
7
19
49
12
1
47
49
13
1
11
I
4
I
0
I
0
I
0
I
-2
p
20
x
7
Sinatra
n
x
11
Application
x
14
PainExtensions
n
x
8
register
n
x
9
Delegator
x
24
private_instance_methods
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
6
to_sym
p
5
I
0
I
3d
I
1
I
3e
I
a
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
1
x
1
m
x
3
map
x
4
foo=
x
8
include?
x
6
assert
n
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
6
to_sym
p
5
I
0
I
3f
I
1
I
40
I
a
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
1
x
1
m
x
4
bar?
n
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
1
n
p
1
x
6
to_sym
p
5
I
0
I
41
I
1
I
42
I
a
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
1
x
1
m
x
5
fizz!
p
33
I
0
I
3c
I
c
I
3e
I
d
I
3d
I
1a
I
3e
I
1c
I
3d
I
1f
I
3e
I
24
I
40
I
25
I
3f
I
32
I
40
I
34
I
3f
I
37
I
40
I
3c
I
42
I
3d
I
41
I
4a
I
42
I
4c
I
41
I
4f
I
42
I
54
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
s
42
will not delegate methods on Base#register
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
38
45
0
1
43
2
45
3
4
49
5
1
15
5
45
0
6
43
7
49
8
0
7
9
64
49
10
1
10
32
2
8
33
3
47
49
11
1
11
I
4
I
0
I
0
I
0
I
-2
p
12
x
7
Sinatra
n
x
4
Base
x
14
QuuxExtensions
n
x
8
register
n
x
9
Delegator
x
24
private_instance_methods
s
4
quux
x
8
include?
x
6
assert
p
5
I
0
I
46
I
c
I
47
I
26
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
s
59
will extend the Sinatra::Application application by default
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
48
45
0
1
45
2
3
49
4
1
15
5
45
0
5
43
6
7
7
49
8
1
10
26
2
8
27
3
47
49
9
1
15
5
45
0
10
43
11
7
7
49
8
1
47
49
9
1
11
I
4
I
0
I
0
I
0
I
-2
p
12
x
7
Sinatra
n
x
13
BazExtensions
n
x
8
register
n
x
4
Base
x
3
baz
x
11
respond_to?
x
6
assert
n
x
11
Application
p
7
I
0
I
4b
I
a
I
4c
I
20
I
4d
I
30
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
15
BizzleExtension
M
1
n
n
x
15
BizzleExtension
i
27
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
5
49
6
4
11
I
5
I
0
I
0
I
0
n
p
7
x
6
bizzle
M
1
n
n
x
6
bizzle
i
4
5
48
0
11
I
1
I
0
I
0
I
0
n
p
1
x
13
bizzle_option
p
5
I
-1
I
51
I
0
I
52
I
4
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
17
method_visibility
x
15
add_defn_method
x
10
registered
M
1
n
n
x
10
registered
i
53
20
0
45
0
1
83
2
9
12
1
8
20
5
7
3
64
47
49
4
1
15
20
0
7
5
49
6
1
9
33
1
8
41
5
7
7
64
47
49
4
1
15
20
0
7
8
7
9
64
49
10
2
11
I
4
I
1
I
1
I
1
n
p
11
x
9
BizzleApp
n
x
2
==
s
24
base should be BizzleApp
x
4
fail
x
6
bizzle
x
11
respond_to?
s
49
base should have already extended BizzleExtension
x
13
bizzle_option
s
7
bizzle!
x
3
set
p
13
I
-1
I
55
I
0
I
56
I
14
I
0
I
15
I
57
I
29
I
0
I
2a
I
58
I
35
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
1
x
4
base
x
13
attach_method
p
5
I
2
I
51
I
10
I
55
I
1b
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
9
BizzleApp
x
7
Sinatra
n
x
4
Base
x
10
open_class
s
67
sends .registered to the extension module after extending the class
M
1
p
2
x
9
for_block
t
n
x
14
ExtensionsTest
i
40
45
0
1
45
2
3
49
4
1
15
5
7
5
64
45
0
6
49
7
0
47
49
8
2
15
5
7
5
64
45
0
9
49
10
0
47
49
8
2
11
I
4
I
0
I
0
I
0
I
-2
p
11
x
9
BizzleApp
n
x
15
BizzleExtension
n
x
8
register
s
7
bizzle!
n
x
13
bizzle_option
x
12
assert_equal
n
x
6
bizzle
p
7
I
0
I
60
I
a
I
61
I
19
I
62
I
28
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
p
29
I
2
I
4
I
1c
I
d
I
36
I
12
I
50
I
17
I
6a
I
1c
I
84
I
22
I
8f
I
2c
I
9a
I
33
I
a5
I
3b
I
b0
I
45
I
bb
I
4a
I
c6
I
50
I
e0
I
5c
I
ef
I
5f
I
fa
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
x
13
attach_method
p
5
I
0
I
1
I
15
I
3
I
38
x
104
/Users/riccardotacconi/dev/sinatra/simple/tmp/isolate/rbx-1.8/gems/sinatra-1.1.2/test/extensions_test.rb
p
0
